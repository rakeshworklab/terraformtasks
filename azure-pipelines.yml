# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml.

trigger:
- none

pool:
  vmImage: ubuntu-latest

stages:
  - stage: deployment
    jobs:
      - job: init
        steps:
          - task: TerraformInstaller@0
            inputs:
              terraformVersion: 'latest'
          - task: TerraformTaskV3@3
            inputs:
              provider: 'azurerm'
              command: 'init'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra_deploy'
              backendServiceArm: 'rakeshazurecloud'
              backendAzureRmResourceGroupName: 'sa1_test_eic_trainingRakesh'
              backendAzureRmStorageAccountName: 'rakeshbackendstore'
              backendAzureRmContainerName: 'rakeshtfstate'
              backendAzureRmKey: 'azurerakesh.tfstate'
          - task: TerraformTaskV3@3
            inputs:
              provider: 'azurerm'
              command: 'plan'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra_deploy'
              environmentServiceNameAzureRM: 'rakeshazurecloud'
          - task: TerraformTaskV3@3
            inputs:
              provider: 'azurerm'
              command: 'apply'
              workingDirectory: '$(System.DefaultWorkingDirectory)/infra_deploy'
              commandOptions: '-auto-approve'
              environmentServiceNameAzureRM: 'rakeshazurecloud'
